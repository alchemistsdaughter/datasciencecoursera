## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
finalsub
# if (num == "worst") {
#   finalsub[nrow(finalsub),]
# }
# else if (num == "best") {
#   finalstatesub[1]
# }
# else {
#   finalstatesub[num]
# }
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
## returns a hospital with given rank (num arg) in given state
## mortality rate for heart attack, heart failure, or pneumonia
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that state and outcome are valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data[, 7]) {
stop("invalid state")
} else if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
finalsub
# if (num == "worst") {
#   finalsub[nrow(finalsub),]
# }
# else if (num == "best") {
#   finalstatesub[1]
# }
# else {
#   finalstatesub[num]
# }
}
rankhospital("MD", "heart attack", "worst")
## returns a hospital with given rank (num arg) in given state
## mortality rate for heart attack, heart failure, or pneumonia
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that state and outcome are valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data[, 7]) {
stop("invalid state")
} else if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
finalsub
finalsub[nrow(finalsub),]
rankhospital("MD", "heart attack", "worst")
## returns a hospital with given rank (num arg) in given state
## mortality rate for heart attack, heart failure, or pneumonia
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that state and outcome are valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data[, 7]) {
stop("invalid state")
} else if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
finalsub
finalsub[nrow(finalsub),]
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
## returns a hospital with given rank (num arg) in given state
## mortality rate for heart attack, heart failure, or pneumonia
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that state and outcome are valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data[, 7]) {
stop("invalid state")
} else if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
finalsub[nrow(finalsub),]
# if (num == "worst") {
#   finalsub[nrow(finalsub),]
# }
# else if (num == "best") {
#   finalstatesub[1]
# }
# else {
#   finalstatesub[num]
# }
}
rankhospital("MD", "heart attack", "worst")
## returns a hospital with given rank (num arg) in given state
## mortality rate for heart attack, heart failure, or pneumonia
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that state and outcome are valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data[, 7]) {
stop("invalid state")
} else if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
if (num == "worst") {
finalsub[nrow(finalsub),]
}
else if (num == "best") {
finalsub[1,1]
}
else {
finalsub[num,1]
}
}
rankhospital("MD", "heart attack", "worst")
## returns a hospital with given rank (num arg) in given state
## mortality rate for heart attack, heart failure, or pneumonia
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that state and outcome are valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data[, 7]) {
stop("invalid state")
} else if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
#convert death rate to numeric
y <- as.numeric(data[,outcome_col])
data <- data[order(y, data[,2]),]
## subset data based on selected state and outcome - returns data frame with hospital name and death rate
statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
finalsub <- na.omit(statesub)
if (num == "worst") {
finalsub[nrow(finalsub),1]
}
else if (num == "best") {
finalsub[1,1]
}
else {
finalsub[num,1]
}
}
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
splitdata <- split(y, ordered_data.State)
splitdata
## get state and hospital name columns only
## for each state return the hospital with given rank (num)
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
splitdata <- split(y, ordered_data[,1])
splitdata
## get state and hospital name columns only
## for each state return the hospital with given rank (num)
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
ordered_data <- na.omit(ordered_data)
splitdata <- split(y, ordered_data[,1])
splitdata
## for each state return the hospital with given rank (num)
# for (s in length(splitdata)) {
#
# }
#
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
splitdata <- na.omit(split(y, ordered_data[,1]))
splitdata
## for each state return the hospital with given rank (num)
# for (s in length(splitdata)) {
#
# }
#
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
y <- na.omit(y)
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
splitdata <- split(y, ordered_data[,1])
splitdata
## for each state return the hospital with given rank (num)
# for (s in length(splitdata)) {
#
# }
#
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
newdata <- na.omit(newdata)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
splitdata <- split(y, ordered_data[,1])
splitdata
## for each state return the hospital with given rank (num)
# for (s in length(splitdata)) {
#
# }
#
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
## Returns a 2-column data frame containing the hospital in each state that has the
## ranking specific in num
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
## check that outcome is valid
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% valid_outcomes == FALSE) {
stop("invalid outcome")
}
## returns the col # based on outcome input
outcome_col <- if(outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else if (outcome == "pneumonia") {
23
}
y <- as.numeric(data[,outcome_col])
## create a dataframe with state, hospital, and outcome rate
newdata <- data.frame(data$State, data$Hospital.Name, y)
newdata <- na.omit(newdata)
ordered_data <- newdata[order(newdata[,3]),] #order by outcome
splitdata <- split(y, ordered_data[,1])
splitdata
## for each state return the hospital with given rank (num)
# for (s in length(splitdata)) {
#
# }
#
# OLD CODE: statesub <- subset(data, data$State== state, select = c(2, outcome_col))
## Return hospital name in that state with the given rank
## 30-day death rate
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = "Not Available")
head(rankall("heart attack", 20), 10)
