library()
library(swirl)
swirl()
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
x <- c(44, NA, 5, NA)
x*3
y <- rnom(1000)
y <- rnorm(1000)
z <- rep(NA, 1000)
bye()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6, ))
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
ok()
sapply(flags, class'')
sapply(flags, class')
sapply(flags, class)
exit
sapply(flags, class)
sapply(flags, class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
chicago <- readRDS("chicago.rds")
swirl()
library(swirl)
swirl()
install_course("Getting_and_Cleaning_Data")
swirl()
mydf <- read.csv("path2csv", stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran,-(r_arch:country)
select(cran,-(r_arch:country))
select(cran,country:r_arch))
select(cran,country:r_arch)
cran
select(cran, -time)
select(cran, -(X:size)
select(cran, -(X:size))
select(cran, -X:size)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, package == "swirl", country == "US")
filter(cran, R.version == "3.1.1", country == "US")
filter(cran, r.version == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, , country == "IN", r_version <= "3.0.2")
filter(cran, , country == "IN", r_version <= 3.0.2)
filter(cran, country == "IN", r_version <= "3.0.2"")
filter(cran, country == "IN", r_version <= "3.0.2")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
avg_bytes
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(by_package)
summarise(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique()))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()\
submit()
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1-9-2012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hh:mm:ss("03:22:14")
hms("03:22:14)
hms("03:22:14")
dt2
ymd(c("2014-05014", "2014-09-22", "2014-07-11"))
ymd(c("2014-05-14", "2014-09-22", "2014-07-11"))
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 6, minutes = 10)
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, end = arrive)
as.period(how_long)
stopwatch()
rm(list = ls())
setwd("~/GitHub/datasciencecoursera/GettingandCleaningData/practicedatasets")
id_housing <- read.csv("./uscommunities.csv")
names(id_housing)
q1 <- strsplit(id_housing, "wgtp")
q1 <- strsplit(id_housing, wgtp)
q1 <- strsplit(id_housing, "wgtp", fixed = TRUE)
dt_id_housing <- data.table(id_housing)
library(data.table)
dt_id_housing <- data.table(id_housing)
q1 <- strsplit(names(dt_id_housing), "wgtp")
q1[123]
q1[[123]
q1[[123]]
q1 <- strsplit(name(id_housing), "wgtp")
q1 <- strsplit(names(id_housing), "wgtp")
q1 <- strsplit(names(id_housing), "wgtp")
q1[[123]]
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./idaho.csv", method = "curl")
dt_idaho <- data.table(read.csv("idaho.csv"))
names(dt_idaho)
q1 <- strsplit(names(dt_idaho), "wgtp")
q1[[123]]
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./gdp", method = "curl")
dt_gdp <- data.table(read.csv("gdp.csv"))
dt_gdp <- data.table(read.csv("gdp"))
head(dt_gdp)
setnames(dt_dgp, c(dt_gdp[1], dt_gdp[2], dt_gdp[4], dt_gdp[5]), c("countrynickname", "ranking", "longname", "gdp"))
setnames(dt_gdp, c(dt_gdp[1], dt_gdp[2], dt_gdp[4], dt_gdp[5]), c("countrynickname", "ranking", "longname", "gdp"))
dt_gdp <- data.table(read.csv("gdp", skip = 4, nrows = 215)
dt_gdp <- data.table(read.csv("gdp", skip = 4, nrows = 215))
head(dt_gdp)
setnames(dt_gdp, c("X", "X.1", "X.3", "X.4"), c("countrycode", "ranking", "longname", "gdp"))
head(dt_gdp)
q2 <- gsub(",", "", dt_gdp$gdp) %>%
q2 <- gsub(",", "", dt_gdp$gdp) %>%
as.numeric() %>%
mean(na.rm = TRUE)
q2 <- mean(as.numeric(gsub(",", "", dt_gdp$gdp)))
q2 <- mean(as.numeric(gsub(",", "", dt_gdp$gdp)), na.rm = TRUE)
q2 <- mean(as.numeric(gsub(pattern = ",", replacement = "", dt_gdp$gdp)), na.rm = TRUE)
setnames(dt_gdp, "longname" = "countryNames")
setnames(dt_gdp, c("longname"), c("countryNames"))
head(dt_gdp)
grep("United$",countryNames), 3
grep("^United",countryNames)
rm(list = ls())
dt_gdp <- data.table(read.csv("gdp", skip = 4, nrows = 215))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "./ed_data.csv", method = "curl")
dt_education <- data.table(read.csv("ed_data.csv"))
head(dt_education)
head(dt_gdp)
setnames(dt_gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "ranking", "Long.Name", "gdp"))
combo <- merge(dt_education, dt_gdp, by = "CountryCode")
head(combo)
names(combo)
head(combo$Special.Notes, 20)
table(grepl(pattern = "june", tolower(combo$Special.Notes), grepl(pattern = "fiscal year end", tolower(combo$Special.Notes)))
table(grepl(pattern = "june", tolower(combo$Special.Notes)), grepl(pattern = "fiscal year end", tolower(combo$Special.Notes)))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(amzn)
names(aman)
names(amzn)
head(sampleTimes)
length(grep(pattern = "^2012", sampleTimes))
library(lubridate)
q4 <- grep(pattern = "^2012", sampleTimes)
as.Date(q4)
answer <- as.Date(q4)
weekdays(answers)
weekdays(answer, abbreviate = FALSE)
sum(weekdays(answer, abbreviate = FALSE) == "Monday")
sum(weekdays(as.Date(sampleTimes[grep(pattern = "^2012", sampleTimes)])))
sum(weekdays(as.Date(sampleTimes[grep("^2012",sampleTimes)]))=="Monday")
rm (list = ls())
setwd("~/GitHub/datasciencecoursera/GettingandCleaningData/practicedatasets/courseproject")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "./wearables", method = "curl")
